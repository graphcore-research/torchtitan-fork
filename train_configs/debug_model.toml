# torchtitan Config.toml

[job]
dump_folder = "./outputs"
description = "Llama 3 debug training"
use_for_integration_test = true

[profiling]
enable_profiling = true
save_traces_folder = "profile_trace"
profile_freq = 10
enable_memory_snapshot = false
save_memory_snapshot_folder = "memory_snapshot"

[metrics]
log_freq = 1
enable_color_printing = true
enable_tensorboard = true
save_tb_folder = "tb"
rank_0_only = false # deprecated
distributed_mode = "local_rank_0" # all / local_rank_0 / rank_0

[model]
name = "llama3"
flavor = "debugmodel"
norm_type = "rmsnorm"  # layernorm / np_layernorm / rmsnorm / fused_rmsnorm
# test tokenizer.model, for debug purpose only
tokenizer_path = "./torchtitan/tests/assets/test_tiktoken.model"


[optimizer]
name = "AdamW"
lr = 8e-4
lr_scheduler = "linear_warmup_linear_decay"
lr_scheduler_args = '{}'

[training]
batch_size = 8
seq_len = 2048
warmup_steps = 2  # lr scheduler warm up, normally 20% of the train steps
max_norm = 1.0  # grad norm clipping
steps = 50
data_parallel_replicate_degree = 1
data_parallel_shard_degree = -1
tensor_parallel_degree = 1
compile = false
dataset = "c4_test"
# dataloading_args='{"streaming": true}'

[experimental]
pipeline_parallel_degree = 1
enable_async_tensor_parallel = false

[checkpoint]
enable_checkpoint = false
folder = "checkpoint"
interval_type = "steps"
interval = 5
model_weights_only = false
export_dtype = "float32"
async_mode = "disabled"  # ["disabled", "async", "async_with_pinned_mem"]

[activation_checkpoint]
mode = 'selective'  # ['none', 'selective', 'full']
selective_ac_option = '2'  # 'int' = ac every positive int layer or 'op', ac based on ops policy

[float8]
enable_float8_linear = false

[wandb]
project = "low-bits-training-debug"
